
样本结构表
      aizoo   wuhan   v3  v4  v6    all-mix
neg   2907    1310    370 146 155   4888
pos   1836    718     22  92  126   2794

aizoo: AIZOO开源人脸口罩检测数据，https://github.com/AIZOOTech/FaceMaskDetection
wuhan: 武汉大学开源人脸库，https://github.com/X-zhangyang/Real-World-Masked-Face-Dataset 

以下DIY样本（注意保密）
te-v3: 补充暗环境样本
te-v4: 补充小角度人脸
te-v6: 补充大角度人脸


------------------------------------------------------
train v7
more sample - smile or cloth/pm25 mask, better-7e
7a 4g2(1w&e-3&96) + negV8(40), 28 min (i7cpu)
7b 7a + posV8(73,1black+2pm25+3child), 30 min (i7cpu)
7c 7b + posV8(227,10caton+11catonNoG), 50 min (e5cpu)

7d 7c + posV8(57,4clothR+5clothW+6purple)
7e 7d + posV8(99,7noG+8purplenoG+9pm25noG)
7f 7c - posV8(93,11catonNoG)

error rate 
     tr-1         te-2       te-v1      te-v6
7a   72+158=3.0  30+83=8.4  20+51=7.5  0+0=0%  
7b   0+0=0      50+76=9.4   34+29=6.7  0+0=0% train set err=0, but val worse
7c   82+154=3.1  27+83=8.2  29+39=7.2  0+0=0%  

7d   87+152=3.1  31+81=8.3  30+38=7.2  0+0=0%  
7e   91+152=3.2  30+80=8.2  33+32=6.9  0+0=0% 
7f   87+152=3.1  31+81=8.3  30+38=7.2  0+0=0% ?  

------------------------------------------------------
train v6
more sample - dark glass, not better 
6a 4g2(1w&e-3&96) + negV7(35) + posV7(41) , 30 min (i7cpu)
6b revet to 4g2(1w&e-3&96) , 43 min(e5cpu)

error rate 
     tr-1         te-2       te-v1      te-v6
6a   78+152=3   31+85=8.6  28+47=7.9  0+0=0%  
6b   75+150=2.9  29+79=8.0  29+47=8.0  0+0=0% 

------------------------------------------------------
train v5
resize, not better
5a 5w&e-7, 96->160 , >7h (8.30- 15.30), too long time , give up
5b 5k&e-3 & 96->128 -50min1, train test better, but val test worse
5c 5k & 128 & e-3->5 -50min1, e-3 same as e-5

error rate 
     tr-1         te-2       te-v1      te-v6
5a
5b  10+41=0.7  40+91=9.7  30+57=9.2  4+2=0.8  5k 
5c  12+54=0.7  40+91=9.7  30+57=9.2  4+2=0.8  nearly same as b 
------------------------------------------------------
train v4
svm.train ->  train_auto
4a same param, too long time (1.5min -> >1h ), give up 
4b iter 5w->1100, eps=e-7->-3,too long time (9.18 - 9.48 0.5h ), give up ?!
4c k 10 -> 5, b false -> true,too long time (11. - 11.15 15min ), give up ? no, k=5 is ok!
4d k 5 -> 10, b false -> true,1h
4e k 10 -> 5, eps=e-3 ->-7, 16min 
4f k=5, eps=e-3, count=1100->2000, 20min , better 
4g k=5, eps=e-3, count=2000->5000-25min1,  1w-28min2, 5w-34min3, better 5k ok
4h k=5, count=5000,eps=e-3->7, 5k-24min1, 5w-34min2


error rate 
     tr-1         te-2       te-v1      te-v6
4a    
4b   
4c  164+283=5.8  40+115=12  34+80=12  18+34=7% 
4d  164+283=5.8  40+115=12  34+80=12  18+34=7% 
4e  164+283=5.8  40+115=12  34+80=12  18+34=7% 
4f  53+129=2.4  30+88=8.8  34+52=9.1  2+0=0% 
4g1 75+148=2.9  30+80=8.2  30+45=7.9  0+0=0%  5k 
4g2 75+150=2.9  29+79=8.0  29+47=8.0  0+0=0%  1w 
4g3 75+149=2.9  27+81=8.0  29+48=8.0  0+0=0%  5w
4h1 75+148=2.9  30+80=8.2  30+45=7.9  0+0=0%  same as 4g1
4h2 75+149=2.9  27+80=8.0  29+48=8.0  0+0=0%  

------------------------------------------------------
train v3
CvTermCriteria 
3a count, 5w->unlimit, not change
3b eps, e-7 ->-3 , not change
3c eps, e-7 ->-5 , not change 
3d count, 5w->1000, few better? yes, 52s, >
1.1(52), 1.3(62), 1.5(69), 1.6(71), 1.7(74), 1.8(74), 1.9(76), >2(78)
3e count, 5w->5000, few better? same, 78S
3f count, 5w->100, few better? worse, 5s 
3g count, 5w->500, few better? worse, 24s
3h count, 5w->2000, few better? same, 78S
3i count, 5w->1500, few better? same, 69S
3j count, 5w->1300, few better? same
3k count, 5w->1100, few better? better than d, best 
3l count, 5w->900, few better? same as d

3m count=1100,eps=e-7 ->-3 few better? same as k, 52s 

error rate 
     tr-1         te-2       te-v1      te-v6
3a   169+451=8   26+122=11  21+68=9.4  0+7=1% 
3b   170+451=8   26+122=11  21+68=9.4  0+7=1%   
3c   169+451=8   26+122=11  21+68=9.4  0+7=1% 
3d   166+323=6.4 31+106=10  41+46=9.2  0+1=0%  
3e   169+451=8   26+122=11  21+68=9.4  0+7=1%
3f   1894+567=32 275+131=30  178+131=33 159+60=29% 
3g   541+336=11 71+103=13  116+19=14  70+0=9.3% 
3h   167+451=8   26+124=11  21+69=9.4  0+7=1% 
3i   167+451=8   26+124=11  21+69=9.4  0+7=1% 
3j   145+445=7.7  27+131=12  30+55=9.0  0+3=0% 
3k   149+397=7.1  25+115=10  24+52=8.0  0+2=0% 
3l   123+312=5.7 34+102=10  33+59=9.7  0+0=0%  ?
3m   149+397=7.1  25+115=10  24+52=8.0  0+2=0% 

------------------------------------------------------
train v2
image rgb->gray, acc worse 

error rate 
     tr-1         te-2       te-v1      te-v6
1a   169+451=8  26+122=11  21+68=9.4  0+7=1% 

------------------------------------------------------
train v1

error rate 
     tr-1         te-2       te-v1      te-v6
1a   141+405=7.1  23+114=10  7+44=5.4  0+1=0% 

------------------------------------------------------------
    tr-1  te-1  te-2  te-3 te-4  te-v1 te-v2 te-v3 te-v4 te-v5 te-v6 te-v7
neg 4888  722    722   1311 1310  434  224   781   613   382   384           
pos 2794  622    622   713   718  511  193   365   457   448   369    
tot 7682  1344   1344  2024 2028  945  417   1146  1070  830   753   

ref error rate from object-detector(git) 
     tr-1       te-2       te-v1      te-v2     te-v3     te-v4     te-v5  te-v6
6a   70+106=3.7 31+73=7.7  15+47=6.4  20+11=7.4 8+23=2.7  5+18=2.1  0+0=0% 0+0=0%  
